name: GitHub PR Pipeline

on:
  workflow_dispatch:
    inputs:
      python-json:
        description: "Enter repository name (org/repo1)"
        type: string
      repo2:
        description: "Enable for repo2"
        type: boolean
      repo3:
        description: "Enable for repo3"
        type: boolean
      tag_name:
        description: "Tag name to apply"
        required: true
      release:
        description: "Create a release branch"
        type: boolean
      hotfix:
        description: "Create a hotfix branch"
        type: boolean

jobs:
  process-repos:
    runs-on: ubuntu-latest
    steps:
      - name: Build Selected Repository List
        run: |
          echo "" > repo-list
          [[ -n "${{ github.event.inputs.python-json }}" ]] && echo "${{ github.event.inputs.python-json }}" >> repo-list
          [[ "${{ github.event.inputs.repo2 }}" == "true" ]] && echo "${{ vars.REPO_NAME_2 }}" >> repo-list
          [[ "${{ github.event.inputs.repo3 }}" == "true" ]] && echo "${{ vars.REPO_NAME_3 }}" >> repo-list

          echo "ðŸ“‚ Selected repositories:"
          cat repo-list

      - name: Process Each Repository
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_NAME: ${{ github.event.inputs.tag_name }}
          RELEASE: ${{ github.event.inputs.release }}
          HOTFIX: ${{ github.event.inputs.hotfix }}
        run: |
          while read -r REPOSITORY; do 
            [[ -z "$REPOSITORY" ]] && continue

            echo "ðŸš€ Processing repository: $REPOSITORY"

            # Clone the repository
            git clone https://x-access-token:${GH_TOKEN}@github.com/$REPOSITORY.git
            REPO_NAME=$(basename "$REPOSITORY")
            cd "$REPO_NAME"

            # Ensure we're working with the latest develop branch
            git fetch origin develop
            git checkout develop
            git pull origin develop

            # Get the latest commit hash
            latest_commit=$(git rev-parse HEAD)

            # Apply Tag
            git tag "$TAG_NAME" "$latest_commit"
            git push origin --tags
            echo "âœ… Tagged latest commit with $TAG_NAME"

            # Create Release Branch
            if [[ "$RELEASE" == "true" ]]; then
              release_branch="release-$(date +%Y%m%d)"
              git checkout -b "$release_branch" "$latest_commit"
              git push origin "$release_branch"
              echo "ðŸš€ Created release branch: $release_branch"
            fi

            # Create Hotfix Branch
            if [[ "$HOTFIX" == "true" ]]; then
              hotfix_branch="hotfix-$(date +%Y%m%d)"
              git checkout -b "$hotfix_branch" "$latest_commit"
              git push origin "$hotfix_branch"
              echo "ðŸ”¥ Created hotfix branch: $hotfix_branch"
            fi

            cd ..
          done < repo-list
