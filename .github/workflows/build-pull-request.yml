name: GitHub PR Pipeline

on:
  workflow_dispatch:
    inputs:
      repositories:
        description: "JSON array of repositories"
        required: true
      tag_name:
        description: "Tag name to apply"
        required: true
      release:
        description: "Create a release branch"
        type: boolean
      hotfix:
        description: "Create a hotfix branch"
        type: boolean

jobs:
  process-repos:
    runs-on: ubuntu-latest
    steps:
      - name: Convert JSON array to file
        run: |
          echo '${{ github.event.inputs.repositories }}' | jq -r '.[]' > repo-list
          echo "ðŸ“‚ Repository list:"
          cat repo-list

      - name: Process Each Repository
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          TAG_NAME: ${{ github.event.inputs.tag_name }}
          RELEASE: ${{ github.event.inputs.release }}
          HOTFIX: ${{ github.event.inputs.hotfix }}
        run: |
          while read REPOSITORY; do 
            echo "ðŸš€ Processing repository: $REPOSITORY"

            git clone https://x-access-token:${GH_TOKEN}@github.com/$REPOSITORY.git
            cd $(basename "$REPOSITORY")

            git fetch origin develop
            git checkout develop
            git pull origin develop

            latest_commit=$(git rev-parse HEAD)

            # Apply Tag
            git tag "$TAG_NAME" $latest_commit
            git push origin --tags
            echo "âœ… Tagged latest commit with $TAG_NAME"

            # Create Release Branch
            if [[ "$RELEASE" == "true" ]]; then
              release_branch="release-$(date +%Y%m%d)"
              git checkout -b $release_branch $latest_commit
              git push origin $release_branch
              echo "ðŸš€ Created release branch: $release_branch"
            fi

            # Create Hotfix Branch
            if [[ "$HOTFIX" == "true" ]]; then
              hotfix_branch="hotfix-$(date +%Y%m%d)"
              git checkout -b $hotfix_branch $latest_commit
              git push origin $hotfix_branch
              echo "ðŸ”¥ Created hotfix branch: $hotfix_branch"
            fi

            cd ..
          done < repo-list
